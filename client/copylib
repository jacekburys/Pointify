#!/bin/zsh

client_root=$(dirname $0:A)
pushd $client_root

copycv () {
    if [ $# -ne 3 ] ; then
        echo "Needs to supply opencv source path, opencv module path, opencv binary path, in this order!"
        return
    fi
    if ! [ -d $1 ] ; then
        echo "Opencv source path supplied is not a directory"
        return
    fi
    if ! [ -d $2 ] ; then
        echo "Opencv module path supplied is not a directory"
        return
    fi
    if ! [ -d $3 ] ; then
        echo "Opencv binary path supplied is not a directory"
        return
    fi
    opencv_src=$1:A
    opencv_module=$2:A
    opencv_bin=$3:A

    cp -R $opencv_src/include/opencv2 $client_root/include/
    for d in $opencv_src/modules/* ; do
        if [ -d $d ] && [ -d $d/include ] ; then
            cp -R $d/include/opencv2 $client_root/include/
        fi
    done
    for d in $opencv_module/modules/* ; do
        if [ -d $d ] && [ -d $d/include ] ; then
            cp -R $d/include/opencv2 $client_root/include/
        fi
    done
    cp -R $opencv_bin/opencv2 $client_root/include/
    cp -R $opencv_bin/lib/* $client_root/lib/mac/
}

copyfreenect () {
    if [ $# -eq 0 ] ; then
        echo "Needs to supply freenect path!"
        return
    fi
    if ! [ -d $1 ] ; then
        echo "Freenect path supplied is not a directory"
        return
    fi
    freenect_path=$1:A

    cp -R $freenect_path/include/libfreenect2 $client_root/include/
    cp -R $freenect_path/build/libfreenect2 $client_root/include/
    cp -R $freenect_path/build/lib/* $client_root/lib/mac
}

copyboost () {
    if [ $# -eq 0 ] ; then
        echo "Needs to supply boost path!"
        return
    fi
    if ! [ -d $1 ] ; then
        echo "Boost path supplied is not a directory"
        return
    fi
    boost_path=$1:A

    cp -R $boost_path/boost $client_root/include/
    cp -R $boost_path/bin.v2/libs/**/release/**/libboost*.a $client_root/lib/mac
}

copysocketio () {
    if [ $# -eq 0 ] ; then
        echo "Needs to supply socketio path!"
        return
    fi
    if ! [ -d $1 ] ; then
        echo "Socketio path supplied is not a directory"
        return
    fi
    socketio_path=$1:A

    if ! [ -d $client_root/include/socketio ] ; then
        mkdir $client_root/include/socketio
    fi
    if ! [ -d $client_root/include/socketio/internal ] ; then
        mkdir $client_root/include/socketio/internal
    fi
    cp -R $socketio_path/src/*.h $client_root/include/socketio
    cp -R $socketio_path/src/internal/*.h $client_root/include/socketio/internal
    cp -R $socketio_path/bin/libsocketio.a $client_root/lib/mac
}

copycv ../lib/opencv ../lib/opencv_contrib ../lib/opencv_bin
copyfreenect ../lib/libfreenect2
copyboost ../lib/boost
copysocketio ../lib/socket.io-client-cpp

for lib in $client_root/lib/mac/*.dylib ; do
    if ! [ -h $lib ] ; then
        dylib=$(basename $lib)
        install_name_tool -id @rpath/$dylib $lib > /dev/null 2>&1
    fi
done

popd

